/*-------------- Testing Area for Circles--------------*/
ref: <div class="circle"><p>An...make the cut.</p></div>
.circle {
  display: inline-block;
  min-width: 15%;
  /* to allow placement of numbers on top of circles instead of below them */
  white-space: nowrap;
}

.circle:before {
  border-radius: 50%;
  /* = 15%, almost gives us viewport width unit (15vw) */
  width: 100%;
  /*padding-bottom: 100%;
*/  /* this way we should have 1px gap between circles */
  margin: 15px .5px;
  background: white;
  content: 'Content Before...';
  display: inline-block;
  /* circle to the middle, so that... [1] */
  vertical-align: middle;
  
  /* to use viewport based units we can safely override the old units in this way */
  padding-bottom: 0vw;
  width: 15vw;
  height: 15vw;
}

.circle p {
  display: inline-block;
  font-size: 16pt;
  font-family: 'Italianno', cursive;
  /* -.5em = white space between p elements... */
  margin: 0 -.5em 0 -100%;
  padding: 0;
  /* ... text can be middle too! [1] */
  vertical-align: middle;
  white-space: normal;
  width: 100%;
  /* for some reason that I can't figure out right now...
    viewport units eliminate the white space issue */
  margin: 0 0 0 -15vw;
  width: 15vw;
}


-------------- using svg --------------------
      <div class="outer">  
        <svg viewBox="0 0 140 140" preserveAspectRatio="xMinYMin meet">
          <g>
            <circle r="50%" cx="50%" cy="50%" class="circle-back" />
            <text x="50%" y="50%" text-anchor="middle" dy="0.3em">42</text>
          </g>
        </svg> 
      </div> 

svg - related css: 

.outer {
  align-items: center;
  border: 1px solid #ccc;
  display: flex;
  height: 500px;
  justify-content: center;
  max-width: 100%;
  overflow: auto;
  padding: 50px;
  resize:both;
}

svg {  
  height: 100%;
}

circle {  
  fill: #3DB8A4;
}

text {  
  fill: #fff;
  font-size: 4rem;
  font-family: sans-serif;
}





/*-------------- End Testing Area --------------